using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Data.SQLite;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SQLiteDemo
{
    class Program
    {

        static void Main(string[] args)
        {
            SQLiteConnection sqlite_conn;
            sqlite_conn = CreateConnection();
            InsertData(sqlite_conn);
            ReadData(sqlite_conn);
            UpdateData(sqlite_conn);
        }

        static SQLiteConnection CreateConnection()
        {
            SQLiteConnection sqlite_conn;

            sqlite_conn = new SQLiteConnection("Data Source=\"C:\\sqlite\\Week5.db\"; Version=3;");

            try
            {
                sqlite_conn.Open();
                Console.WriteLine("Connected to Week5.db successfully.");
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error connecting to database: " + ex.Message);
            }

            return sqlite_conn;
        }

        static void CreateTable(SQLiteConnection conn)
        {

            SQLiteCommand sqlite_cmd;
            string Createsql = "CREATE TABLE SampleTable(Col1 VARCHAR(20), Col2 INT)";
           string Createsql1 = "CREATE TABLE SampleTable1(Col1 VARCHAR(20), Col2 INT)";
           sqlite_cmd = conn.CreateCommand();
            sqlite_cmd.CommandText = Createsql;
            sqlite_cmd.ExecuteNonQuery();
            sqlite_cmd.CommandText = Createsql1;
            sqlite_cmd.ExecuteNonQuery();

        }

        static void InsertData(SQLiteConnection conn)
        {
            SQLiteCommand sqlite_cmd;
            sqlite_cmd = conn.CreateCommand();
            sqlite_cmd.CommandText = "INSERT INTO users (id, username, email, password, isadmin) VALUES (1, 'user1', 'user1@email.com', 'Password_D', 1); ";
           sqlite_cmd.ExecuteNonQuery();
            sqlite_cmd.CommandText = "INSERT INTO users (id, username, email, password, isadmin) VALUES (2, 'user2', 'user2@email.com', 'Password_C', 0); ";
           sqlite_cmd.ExecuteNonQuery();
            sqlite_cmd.CommandText = "INSERT INTO users (id, username, email, password, isadmin) VALUES (3, 'user3', 'user3@email.com', 'Password_B', 0); ";
           sqlite_cmd.ExecuteNonQuery();


            sqlite_cmd.CommandText = "INSERT INTO users (id, username, email, password, isadmin) VALUES (4, 'user4', 'user4@email.com', 'Password_A', 0); ";
           sqlite_cmd.ExecuteNonQuery();

        }

        static void ReadData(SQLiteConnection conn)
        {
            SQLiteDataReader sqlite_datareader;
            SQLiteCommand sqlite_cmd;
            sqlite_cmd = conn.CreateCommand();
            sqlite_cmd.CommandText = "SELECT * FROM users WHERE isadmin = 0;";

            sqlite_datareader = sqlite_cmd.ExecuteReader();
            while (sqlite_datareader.Read())
            {
                object value = sqlite_datareader.GetValue(0);
                Console.WriteLine(value.ToString());
            }

            sqlite_cmd = conn.CreateCommand();
            sqlite_cmd.CommandText = "SELECT * FROM users WHERE username = 'user3' AND password = 'Password_B';";

            sqlite_datareader = sqlite_cmd.ExecuteReader();
            while (sqlite_datareader.Read())
            {
                object value = sqlite_datareader.GetValue(0);
                Console.WriteLine(value.ToString());
            }
            conn.Close();
        }

        static void UpdateData(SQLiteConnection conn)
        {
            SQLiteCommand sqlite_cmd;

            string updateSql = "UPDATE users SET isadmin = 1 WHERE username = 'user4';";

            sqlite_cmd = conn.CreateCommand();
            sqlite_cmd.CommandText = updateSql;

            sqlite_cmd.ExecuteNonQuery();

            updateSql = "DELETE FROM users WHERE id = 4;";

            sqlite_cmd = conn.CreateCommand();
            sqlite_cmd.CommandText = updateSql;

            sqlite_cmd.ExecuteNonQuery();
        }
    }
}
